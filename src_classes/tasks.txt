Репозиторий 
https://github.com/romannikiforov/08_mini_projects_jsa.git


git clone https://github.com/romannikiforov/08_mini_projects_jsa.git
cd 08_mini_projects_jsa.git
npm i

Используются дополнительные  пакеты 
prop-types styled-components shortid bootstrap
 
***************************************************************
************************ Структура проекта *********************
***************************************************************
- из каталога src проекта удаляем все файлы
- создаем файл  src/index.js 
- создаем каталог src/components 
- создаем компонент src/components/App.jsx  (rfce)

************************************************************
*****************   Project 1  *****************************
************************************************************

git checkout 01_project_1
==================== Проект 1 ================
1. Создание компонентов  CartList, Cart  
2. Работа с данными  
3. Вывод списка компонентов Cart
/---------------------------------------------------- 
<div className="cart-box">
    <div className="cart">
        <h3></h3>
        <p></p>
        <img src="https://placehold.it/75" />
         <button className="delete-button">Delete user</button>
    </div>
  </div>
-------------------------------------------------------/

=================================== ЗАДАНИЕ СЛУШАТЕЛЯМ:
- определить propTypes для всех комопнентa Cart
==================================================================

4. Создание компонента Form (формы добавления нового Cart )
=================================== ЗАДАНИЕ СЛУШАТЕЛЯМ:
- реализовать компонент формы (класс  Form) для 
  добавления данных для Cart. Форма должна быть контроллируемой
  и содержать в state свойство userName
- добавить компонент формы в компонент  App  

/src/components/Form.jsx
/---------------------------------------------------- 
<form>
  <div className="form-box">
    <div className="form-box__item">
        <input type="text" />
        <button>Add user</button>
    </div>
  </div>
 </form>
-------------------------------------------------------/
==================================================================


5. Реализация state в компоненте App


6. Реализация http запроса на github
=======================================
gaearon
kentcdodds
rachelnabors
bvaughn

https://api.github.com/users/NAME

7. Удаление пользователя
=================================== ЗАДАНИЕ СЛУШАТЕЛЯМ:
В компоненте Cart реализовать удаление
соответствующего пользователя с подтверждением (confirm) 
==================================================================


8. Подключение spinner
=================================== ЗАДАНИЕ СЛУШАТЕЛЯМ:
создать компонент spinner который будет загружать изображение img/spinner.gif
реализовать стилизацию  spinner
реализовать появление spinner на время загрузки данных с сервера
==================================================================


8. Глобальный контекста

9. Перевод компонента App на hooks +  hook useContext 

10. Refactoring 
=================================== ЗАДАНИЕ СЛУШАТЕЛЯМ:
Привести рефакторинг компонента Form - использовать hooks 
==================================================================




************************************************************
*****************   Styled components    ********************
************************************************************

git checkout  02_styled_components

https://www.styled-components.com/
https://www.styled-components.com/docs
https://github.com/styled-components/styled-components

Использование styled-components на примере счетчика

*******************************************************
***********  Render properties    *********************
******************************************************
git checkout  03_render_properties



*******************************************************
***********  Error boundary    *********************
******************************************************
git checkout  04_error_boundary

- искусственно создаем error 
- componentDidCatch


***********************************************************************
*********************  Compound Components   *****************************
***********************************************************************
1. git checkout  05_compound_components
2. Чем нас не устраивает существующий компонент
3. Использование паттерна compound components
    TabsNew, Tabs, TabList, Tab, TabPanels, TabPanel 
4. Создание state и контекста, передача функций через контекст
5. Передача индекса через контекст
6. Обратная совместимость



*******************************************************
*****************   ДОМАШНЕЕ ЗАДАНИЕ    *********************
*******************************************************

1. В проекте 01_project_1 
 Все компоненты написанные на классах реализовать с использованием hook

2. git checkout  06_homework

2.1 вывести packed и unpacked задачи в соответствующие колонки
2.2 реализовать функционал добавления задачи. Для этого: 
- в компоненте NewItem.js реализовать контролируемую форму
- в компоненте NewItem.js реализовать обработку события onSubmit
2.3 реализовать функционал удаление задачи
2.4 Реализовать функционал переключение задач - выполнено-невыполненно (Toggle)
2.5 Реализовать функционал - при клике на кнопку  Mark All As Unpacked  все задачи отметить как выполненные
2.6 Реализовать фильтрацию задач по value
